# Full configuration options can be found at https://www.consul.io/docs/agent/options.html

# datacenter
datacenter = "{{ consul_dc_name }}"

# data_dir
# This flag provides a data directory for the agent to store state. This is required
# for all agents. The directory should be durable across reboots. This is especially
# critical for agents that are running in server mode as they must be able to persist
# cluster state. Additionally, the directory must support the use of filesystem
# locking, meaning some types of mounted folders (e.g. VirtualBox shared folders) may
# not be suitable.
data_dir = "/opt/consul"

# client_addr
# The address to which Consul will bind client interfaces, including the HTTP and DNS
# servers. By default, this is "127.0.0.1", allowing only loopback connections. In
# Consul 1.0 and later this can be set to a space-separated list of addresses to bind
# to, or a go-sockaddr template that can potentially resolve to multiple addresses.
client_addr = "0.0.0.0"
bind_addr = "{{ consul_bind_addr }}"

# ui
# Enables the built-in web UI server and the required HTTP routes. This eliminates
# the need to maintain the Consul web UI files separately from the binary.
ui_config {
  enabled = {{ consul_ui_value }}
}

# server
# This flag is used to control if an agent is in server or client mode.
server = {{ consul_server_bool }}

# bootstrap_expect
{{ consul_bootstrap_output }}

# encrypt
encrypt = "{{ consul_gossip_key }}"

# retry_join
retry_join = [{% for host in consul_retry_join_hosts %}"{{ host }}"{% if not loop.last %},{% endif %}{% endfor %}]

# recursors = [{% for host in consul_recursors %}"{{ host }}"{% if not loop.last %},{% endif %}{% endfor %}]

ca_file = "/etc/consul.d/consul-agent-ca.pem"
cert_file = "/etc/consul.d/{{ clientized_cert_name }}.pem"
key_file = "/etc/consul.d/{{ clientized_cert_name }}-key.pem"
verify_incoming = true
verify_outgoing = true
verify_server_hostname = true

acl = {
 enabled = true
 default_policy = "deny"
 enable_token_persistence = true
}
