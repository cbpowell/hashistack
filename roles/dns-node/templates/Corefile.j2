# Stored at:
# /usr/local/etc/coredns/Corefile

# Rewrite direct queries (i.e. service.direct.subdomain) directly to Consul DNS
direct.{{ net_subdomain }}:{{ dns_loop1_port}} {
  rewrite name substring .direct.{{ net_subdomain }} .service.consul answer auto
  forward . {% for host in consul_dns_servers %}{{ host }}:8600{% if not loop.last %} {% endif %}{% endfor %}
  
  errors
}

# Handle consul service itself
consul.{{ net_subdomain }}:{{ dns_loop1_port }} {
  rewrite name substring consul.{{ net_subdomain }} consul.service.consul answer auto
  forward . {% for host in consul_dns_servers %}{{ host }}:8600{% if not loop.last %} {% endif %}{% endfor %}
  
  errors
}

# Query Consul catalog for services
{{ net_subdomain }}:{{ dns_loop1_port }} {
  # CoreDNS Consul Catalog plugin must be compiled in!
  consul_catalog {{ coredns_enable_tag }} {
    endpoint {{ coredns_consul_endpoint }}
    # Point to service proxy when specified
    service_proxy {{ coredns_srv_proxy_tag }} {{ coredns_srv_proxy }}
    # Use Consul Service metadata tag to define ACLs
    acl_metadata_tag {{ coredns_consul_acl_meta }}
    # Set alias tag
    alias_tag coredns.alias
    # Set ACL ignore tag
    acl_ignore_tag coredns.aclignore
    # Define acl zones
    {{ coredns_acl_zones }}
    # Token needs permission to read services and nodes
    token {{ coredns_consul_token }}
    ttl {{ coredns_ttl }}
  }
  
  errors
}

# This section is necessary - consul_catalog rewrites to consul domain!
consul:{{ dns_loop1_port }} {
  forward . {% for host in consul_dns_servers %}{{ host }}:8600{% if not loop.last %} {% endif %}{% endfor %}
  
  errors
}
